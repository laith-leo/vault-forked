{{! template-lint-configure simple-unless "warn" }}
{{#unless
  (or
    (eq this.attr.type "boolean")
    (contains
      this.attr.options.editType
      (array "boolean" "optionalText" "searchSelect" "mountAccessor" "kv" "file" "ttl" "stringArray" "json" "regex")
    )
  )
}}
  {{#unless (eq this.attr.type "object")}}
    <FormFieldLabel
      for={{this.attr.name}}
      @label={{this.labelString}}
      @helpText={{this.attr.options.helpText}}
      @subText={{this.attr.options.subText}}
      @docLink={{this.attr.options.docLink}}
    />
  {{/unless}}
{{/unless}}
{{#if this.attr.options.possibleValues}}
  <div class="control is-expanded">
    <div class="select is-fullwidth">
      <select
        name={{this.attr.name}}
        id={{this.attr.name}}
        onchange={{action (action "setAndBroadcast" this.valuePath) value="target.value"}}
        data-test-input={{this.attr.name}}
      >
        {{#if this.attr.options.noDefault}}
          <option value="">
            Select one
          </option>
        {{/if}}
        {{#each (path-or-array this.attr.options.possibleValues this.model) as |val|}}
          <option selected={{eq (get this.model this.valuePath) (or val.value val)}} value={{or val.value val}}>
            {{or val.displayName val}}
          </option>
        {{/each}}
      </select>
    </div>
  </div>
{{else if (and (eq this.attr.type "string") (eq this.attr.options.editType "boolean"))}}
  <div class="b-checkbox">
    <input
      type="checkbox"
      id={{this.attr.name}}
      class="styled"
      checked={{eq (get this.model this.valuePath) this.attr.options.trueValue}}
      onchange={{action
        (action "setAndBroadcastBool" this.valuePath this.attr.options.trueValue this.attr.options.falseValue)
        value="target.checked"
      }}
      data-test-input={{this.attr.name}}
    />

    <label for={{this.attr.name}} class="is-label">
      {{this.labelString}}
      {{#if this.attr.options.helpText}}
        <InfoTooltip>{{this.attr.options.helpText}}</InfoTooltip>
      {{/if}}
    </label>
  </div>
{{else if (eq this.attr.options.editType "searchSelect")}}
  <div class="form-section">
    <SearchSelect
      @id={{this.attr.name}}
      @models={{this.attr.options.models}}
      @onChange={{action (action "setAndBroadcast" this.valuePath)}}
      @inputValue={{get this.model this.valuePath}}
      @helpText={{this.attr.options.helpText}}
      @subText={{this.attr.options.subText}}
      @wildcardLabel={{this.attr.options.wildcardLabel}}
      @label={{this.labelString}}
      @subLabel={{this.attr.options.subLabel}}
      @fallbackComponent={{this.attr.options.fallbackComponent}}
      @selectLimit={{this.attr.options.selectLimit}}
      @backend={{this.model.backend}}
      @disallowNewItems={{this.attr.options.onlyAllowExisting}}
    />
  </div>
{{else if (eq this.attr.options.editType "mountAccessor")}}
  <MountAccessorSelect
    @name={{this.attr.name}}
    @label={{this.labelString}}
    @warning={{this.attr.options.warning}}
    @helpText={{this.attr.options.helpText}}
    @value={{get this.model this.valuePath}}
    @onChange={{action "setAndBroadcast" this.valuePath}}
  />
{{else if (eq this.attr.options.editType "kv")}}
  {{! KV Object Editor }}
  <KvObjectEditor
    @value={{get this.model this.valuePath}}
    @onChange={{action "setAndBroadcast" this.valuePath}}
    @label={{this.labelString}}
    @labelClass="title {{if (eq this.mode 'create') 'is-5' 'is-4'}}"
    @helpText={{this.attr.options.helpText}}
    @subText={{this.attr.options.subText}}
    @onKeyUp={{action "handleKeyUp" this.valuePath}}
    @validationError={{get this.validationMessages this.valuePath}}
    class={{if (not-eq this.mode "customMetadata") "form-section"}}
  />
{{else if (eq this.attr.options.editType "file")}}
  {{! File Input }}
  <TextFile
    @helpText={{this.attr.options.helpText}}
    @file={{this.file}}
    @onChange={{action "setFile"}}
    @label={{this.labelString}}
  />
{{else if (eq this.attr.options.editType "ttl")}}
  {{! TTL Picker }}
  <div class="field">
    {{#let (or (get this.model this.valuePath) this.attr.options.setDefault) as |initialValue|}}
      <TtlPicker2
        @onChange={{action (action "setAndBroadcastTtl" this.valuePath)}}
        @label={{this.labelString}}
        @helperTextDisabled={{or this.attr.options.helperTextDisabled "Vault will use the default lease duration."}}
        @helperTextEnabled={{or this.attr.options.helperTextEnabled "Lease will expire after"}}
        @description={{this.attr.helpText}}
        @initialValue={{initialValue}}
        @initialEnabled={{if (eq initialValue "0s") false initialValue}}
      />
    {{/let}}
  </div>
{{else if (eq this.attr.options.editType "regex")}}
  {{! Regex Validated Input }}
  <RegexValidator
    @attr={{this.attr}}
    @labelString={{this.labelString}}
    @value={{or (get this.model this.valuePath) this.attr.options.defaultValue}}
    @onChange={{action (action "setAndBroadcast" this.valuePath) value="target.value"}}
  />
{{else if (eq this.attr.options.editType "optionalText")}}
  {{! Togglable Text Input }}
  <Toggle
    @name="show-{{this.attr.name}}"
    @status="success"
    @size="small"
    @onChange={{action "toggleShow" this.attr.name}}
    @checked={{this.showInput}}
    data-test-toggle={{this.attr.name}}
  >
    <span class="ttl-picker-label is-large">{{this.labelString}}</span><br />
    <div class="description has-text-grey">
      {{#if this.showInput}}
        <span>
          {{this.attr.options.subText}}
          {{#if this.attr.options.docLink}}
            <a href={{this.attr.options.docLink}} target="_blank" rel="noopener noreferrer">
              See our documentation
            </a>
            for help.
          {{/if}}
        </span>
      {{else}}
        <span>
          {{or this.attr.options.defaultSubText "Vault will use the engine default."}}
          {{#if this.attr.options.docLink}}
            <a href={{this.attr.options.docLink}} target="_blank" rel="noopener noreferrer">
              See our documentation
            </a>
            for help.
          {{/if}}
        </span>
      {{/if}}
    </div>
    {{#if this.showInput}}
      <input
        data-test-input={{this.attr.name}}
        id={{this.attr.name}}
        autocomplete="off"
        spellcheck="false"
        value={{or (get this.model this.valuePath) this.attr.options.defaultValue}}
        onChange={{action (action "setAndBroadcast" this.valuePath) value="target.value"}}
        class="input"
        maxLength={{this.attr.options.characterLimit}}
      />
    {{/if}}
  </Toggle>
{{else if (eq this.attr.options.editType "stringArray")}}
  <StringList
    @data-test-input={{this.attr.name}}
    @label={{this.labelString}}
    @warning={{this.attr.options.warning}}
    @helpText={{this.attr.options.helpText}}
    @inputValue={{get this.model this.valuePath}}
    @onChange={{action (action "setAndBroadcast" this.valuePath)}}
  />
{{else if (eq this.attr.options.sensitive true)}}
  {{! Masked Input }}
  <MaskedInput
    @value={{or (get this.model this.valuePath) this.attr.options.defaultValue}}
    @allowCopy="true"
    @onChange={{action (action "setAndBroadcast" this.valuePath)}}
    @name={{this.attr.name}}
    @onKeyUp={{@onKeyUp}}
  />
  {{#if (get this.validationMessages this.attr.name)}}
    <AlertInline @type="danger" @message={{get this.validationMessages this.attr.name}} @paddingTop={{true}} />
  {{/if}}
{{else if (or (eq this.attr.type "number") (eq this.attr.type "string"))}}
  <div class="control">
    {{#if (eq this.attr.options.editType "textarea")}}
      {{! Text area }}
      <textarea
        data-test-input={{this.attr.name}}
        id={{this.attr.name}}
        value={{or (get this.model this.valuePath) this.attr.options.defaultValue}}
        oninput={{action (action "setAndBroadcast" this.valuePath) value="target.value"}}
        class="textarea"
      ></textarea>
    {{else if (eq this.attr.options.editType "password")}}
      <Input
        data-test-input={{this.attr.name}}
        @type="password"
        @value={{get this.model this.valuePath}}
        name={{this.attr.name}}
        class="input"
        {{! Prevents browsers from auto-filling }}
        autocomplete="new-password"
        spellcheck="false"
      />
    {{else if (eq this.attr.options.editType "json")}}
      {{! JSON Editor }}
      <JsonEditor
        data-test-input={{this.attr.name}}
        @title={{this.labelString}}
        @value={{if
          (get this.model this.valuePath)
          (stringify (jsonify (get this.model this.valuePath)))
          this.attr.options.defaultValue
        }}
        @valueUpdated={{action "codemirrorUpdated" this.attr.name "string"}}
        @theme={{or this.attr.options.theme "hashi"}}
        @helpText={{this.attr.options.helpText}}
      >
        {{#if this.attr.options.allowReset}}
          <button
            type="button"
            class="toolbar-link"
            disabled={{not (get this.model this.valuePath)}}
            onClick={{action (action "setAndBroadcast" this.valuePath) null}}
            data-test-json-clear-button
          >
            Clear
            <Icon @name="reload" />
          </button>
        {{/if}}
      </JsonEditor>
      {{#if this.attr.options.subText}}
        <p class="sub-text">
          {{this.attr.options.subText}}
          {{#if this.attr.options.docLink}}
            <a href={{this.attr.options.docLink}} target="_blank" rel="noopener noreferrer">
              See our documentation
            </a>
            for help.
          {{/if}}
        </p>
      {{/if}}
    {{else}}
      {{! Regular Text Input }}
      <input
        data-test-input={{this.attr.name}}
        id={{this.attr.name}}
        readonly={{this.isReadOnly}}
        autocomplete="off"
        spellcheck="false"
        value={{or (get this.model this.valuePath) this.attr.options.defaultValue}}
        onChange={{action (action "setAndBroadcast" this.valuePath) value="target.value"}}
        onkeyup={{action (action "handleKeyUp" this.attr.name) value="target.value"}}
        class="input {{if (get this.validationMessages this.attr.name) 'has-error-border'}}"
        maxLength={{this.attr.options.characterLimit}}
      />
      {{#if this.attr.options.validationAttr}}
        {{#if (and (get this.model this.valuePath) (not (get this.model this.attr.options.validationAttr)))}}
          <AlertInline @type="danger" @message={{this.attr.options.invalidMessage}} />
        {{/if}}
      {{/if}}
      {{#if (get this.validationMessages this.attr.name)}}
        <AlertInline @type="danger" @message={{get this.validationMessages this.attr.name}} @paddingTop={{true}} />
      {{/if}}
    {{/if}}
  </div>
{{else if (eq this.attr.type "boolean")}}
  <div class="b-checkbox">
    <input
      disabled={{this.disabled}}
      type="checkbox"
      id={{this.attr.name}}
      class="styled"
      checked={{get this.model this.attr.name}}
      onchange={{action (action "setAndBroadcast" this.valuePath) value="target.checked"}}
      data-test-input={{this.attr.name}}
    />

    <label for={{this.attr.name}} class="is-label">
      {{this.labelString}}
      {{#if (and this.showHelpText this.attr.options.helpText)}}
        <InfoTooltip>{{this.attr.options.helpText}}</InfoTooltip>
      {{/if}}
    </label>
    {{#if this.attr.options.subText}}
      <p class="sub-text">{{this.attr.options.subText}}</p>
    {{/if}}
  </div>
{{else if (eq this.attr.type "object")}}
  <JsonEditor
    @title={{this.labelString}}
    @value={{if (get this.model this.valuePath) (stringify (get this.model this.valuePath)) this.emptyData}}
    @valueUpdated={{action "codemirrorUpdated" this.attr.name false}}
    @helpText={{this.attr.options.helpText}}
  />
{{/if}}